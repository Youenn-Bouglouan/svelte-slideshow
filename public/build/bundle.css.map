{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Minislide.svelte",
    "..\\..\\Minislides.svelte",
    "..\\..\\Navigation.svelte",
    "..\\..\\CodeSnippet.svelte",
    "..\\..\\Slide1.svelte",
    "..\\..\\Slide2.svelte",
    "..\\..\\Slide3.svelte",
    "..\\..\\SlideContainer.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Navigation from './Navigation.svelte'\n  import { push } from 'svelte-spa-router'\n\n  let currentSlide = undefined\n\n  function handleSlideChanged(event) {\n    currentSlide = event.detail.slide\n    if (event.detail.refreshUrlRequired) {\n      push(`/slides/${event.detail.slideIndex}`)\n    }\n  }\n</script>\n\n<div class=\"main\">\n  <div class=\"slide\">\n    <svelte:component this={currentSlide} />\n  </div>\n\n  <div class=\"navigation\">\n    <Navigation on:slideChanged={handleSlideChanged} />\n  </div>\n</div>\n\n<style>\n  .main {\n    display: flex;\n    flex-flow: column;\n\n    /* background: grey; */\n    height: 100%;\n  }\n\n  .slide {\n    flex: 1 0 auto;\n  }\n\n  .navigation {\n    display: flex;\n    flex-flow: row;\n\n    margin-left: 40px;\n    margin-right: 40px;\n    margin-bottom: 10px;\n    margin-top: 10px;\n    background-color: grey;\n    border-radius: 10px;\n    z-index: 20;\n  }\n</style>\n",
    "<script>\r\n  import { createEventDispatcher } from 'svelte'\r\n  import { currentSlideReadOnly } from './navigationStores'\r\n\r\n  export let slideInfo\r\n\r\n  const dispatch = createEventDispatcher()\r\n</script>\r\n\r\n<button\r\n  class={$currentSlideReadOnly !== slideInfo.index ? 'square' : 'square selected'}\r\n  on:click={() => dispatch('minislideSelected', slideInfo)}>\r\n  <div class=\"tooltip\">\r\n    {slideInfo.index}\r\n    <!-- <div class=\"top\">\r\n      <div class=\"text-content\">\r\n        <h3>{slideInfo.description}</h3>\r\n        <div class=\"miniature\">\r\n          <svelte:component this={slideInfo.slide} />\r\n        </div>\r\n        <i />\r\n      </div>\r\n    </div> -->\r\n\r\n  </div>\r\n</button>\r\n\r\n<style>\r\n  /* .tooltip {\r\n    display: inline-block;\r\n    position: relative;\r\n    border-bottom: 1px dotted #666;\r\n    text-align: left;\r\n  }\r\n\r\n  /* .tooltip h3 {\r\n    margin: 5px;\r\n    color: slategray;\r\n  }\r\n\r\n  .tooltip .top {\r\n    min-width: 200px;\r\n    max-width: 400px;\r\n    max-height: 160px;\r\n    top: -20px;\r\n    left: 50%;\r\n    transform: translate(-30%, -100%);\r\n    color: black;\r\n    background-color: orange;\r\n    font-weight: normal;\r\n    font-size: 14px;\r\n    border-radius: 8px;\r\n    position: absolute;\r\n    z-index: 99999999;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.5);\r\n    display: none;\r\n  }\r\n\r\n  .tooltip:hover .top {\r\n    display: block;\r\n  }\r\n\r\n  .tooltip .top i {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 30%;\r\n    margin-left: -15px;\r\n    width: 30px;\r\n    height: 15px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .tooltip .top i::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 15px;\r\n    height: 15px;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n    background-color: orange;\r\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.5);\r\n  } */\r\n\r\n  .square {\r\n    width: 34px;\r\n    height: 34px;\r\n    min-width: 34px;\r\n    border: 1px solid grey;\r\n    border-radius: 25px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin: 5px;\r\n  }\r\n\r\n  .selected {\r\n    border: 2px solid rgb(255, 136, 0);\r\n    background-color: orange;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, createEventDispatcher } from 'svelte'\r\n  import { clamp } from './utils.js'\r\n  import Minislide from './Minislide.svelte'\r\n\r\n  export let slides\r\n</script>\r\n\r\n<div class=\"minislides\">\r\n  {#each $slides as slide}\r\n    <Minislide slideInfo={slide} on:minislideSelected />\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  div.minislides {\r\n    flex: 1 1 auto;\r\n    align-items: center;\r\n    justify-content: stretch;\r\n    overflow-x: auto;\r\n    padding-left: 10px;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, onDestroy, createEventDispatcher } from 'svelte'\r\n  import { clamp } from './utils.js'\r\n  import { slides } from './slides/slidesStore'\r\n  import { slidesNav } from './navigationStores'\r\n  import Minislides from './Minislides.svelte'\r\n  import { location } from 'svelte-spa-router'\r\n\r\n  // functions\r\n\r\n  function dispatchSlideChanged(newSlideNumber, refreshUrlRequired) {\r\n    console.log(`dispatchSlideChanged ${newSlideNumber}`)\r\n    let slide = $slides[newSlideNumber - 1].slide\r\n    dispatch('slideChanged', {\r\n      slideIndex: newSlideNumber,\r\n      slide,\r\n      refreshUrlRequired\r\n    })\r\n  }\r\n\r\n  function sameAsCurrent(index) {\r\n    return $slidesNav.current === index\r\n  }\r\n\r\n  function applySlideOffset(offset) {\r\n    slidesNav.set({\r\n      current: clamp($slidesNav.current + offset, 1, totalSlides),\r\n      previous: $slidesNav.current\r\n    })\r\n    dispatchSlideChanged($slidesNav.current, true)\r\n  }\r\n\r\n  function handleMinislideSelected(event) {\r\n    if (!sameAsCurrent(event.detail.index)) {\r\n      slidesNav.set({\r\n        current: clamp(event.detail.index, 1, totalSlides),\r\n        previous: $slidesNav.current\r\n      })\r\n      dispatchSlideChanged($slidesNav.current, true)\r\n    }\r\n  }\r\n\r\n  // logic\r\n\r\n  const dispatch = createEventDispatcher()\r\n  let totalSlides = $slides.length\r\n  let unsub\r\n\r\n  onMount(() => {\r\n    unsub = location.subscribe(x => {\r\n      let slideIndex = parseInt($location.split('/').slice(-1)[0])\r\n      if (!sameAsCurrent(slideIndex)) {\r\n        // Here notice we pass 'dispatchSlideChanged(newCurrent, false)'\r\n        // instead of          'dispatchSlideChanged($slidesNav.current, true)'\r\n        // it looks like the update via slidesNav.set(...) is not immediately reflected\r\n        // and we can't use the new value of slidesNav.current for dispatchSlideChanged(...)\r\n\r\n        console.log(`slidesNav.current before: ${$slidesNav.current}`)\r\n        let newCurrent = clamp(slideIndex, 1, totalSlides)\r\n        console.log(`new current = ${newCurrent}`)\r\n\r\n        slidesNav.set({\r\n          current: newCurrent,\r\n          previous: $slidesNav.current\r\n        })\r\n\r\n        console.log(`slidesNav.current after: ${$slidesNav.current}`)\r\n        dispatchSlideChanged(newCurrent, false)\r\n      }\r\n    })\r\n\r\n    // load initial page\r\n    dispatchSlideChanged(1, true)\r\n  })\r\n\r\n  onDestroy(unsub)\r\n</script>\r\n\r\n<Minislides {slides} on:minislideSelected={handleMinislideSelected} />\r\n\r\n<div>\r\n  <button\r\n    class:hidden={$slidesNav.current <= 1}\r\n    on:click={() => applySlideOffset(-1)}>\r\n    ◀\r\n  </button>\r\n  <button\r\n    class:hidden={$slidesNav.current >= totalSlides}\r\n    on:click={() => applySlideOffset(1)}>\r\n    ▶\r\n  </button>\r\n  <p>{$slidesNav.current}</p>\r\n</div>\r\n\r\n<style>\r\n  div {\r\n    flex: 0 0 auto;\r\n    user-select: none;\r\n    background-color: orange;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n\r\n  p {\r\n    text-align: center;\r\n    width: 22px;\r\n    margin-right: 20px;\r\n    margin-left: 10px;\r\n    display: inline-block;\r\n  }\r\n\r\n  button {\r\n    width: 20px;\r\n    border: none;\r\n    background-color: Transparent;\r\n    display: inline-block;\r\n    transition: all 0.1s ease-in-out;\r\n  }\r\n\r\n  button:hover {\r\n    transform: scale(1.5);\r\n  }\r\n\r\n  button:active {\r\n    background-color: transparent;\r\n  }\r\n\r\n  .hidden {\r\n    opacity: 40%;\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { HighlightSvelte } from 'svelte-highlight'\r\n  import { javascript } from 'svelte-highlight/languages'\r\n  import { androidstudio } from 'svelte-highlight/styles'\r\n\r\n  export let code\r\n</script>\r\n\r\n<svelte:head>\r\n  {@html androidstudio}\r\n</svelte:head>\r\n\r\n<div class=\"codeSnippet\">\r\n  <HighlightSvelte language={javascript} {code} />\r\n</div>\r\n\r\n<style>\r\n  .codeSnippet {\r\n    display: flex;\r\n    text-align: start;\r\n    justify-content: center;\r\n    font-size: xx-large;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  logMountAndDestroy('Slide 1')\r\n\r\n  import { logMountAndDestroy } from '../utils.js'\r\n  import SlideContainer from './SlideContainer.svelte'\r\n  import CodeSnippet from './CodeSnippet.svelte'\r\n\r\n  let codeSnippet1 = `<script>\r\n  let a = 0;\r\n  let b = 0;\r\n  $: c = a + b;\r\n<\\/script>`\r\n\r\n  let a = 0\r\n  let b = 0\r\n  $: c = a + b\r\n\r\n  let codeSnippet2 = `<script>\r\n  let name = 'Stranger'\r\n  $: hello = \\`Hello, \\${name}!\\`\r\n<\\/script>`\r\n\r\n  let name = 'Stranger'\r\n  $: hello = `Hello, ${name}!`\r\n</script>\r\n\r\n<SlideContainer>\r\n  <h1>True reactivity</h1>\r\n\r\n  <div>\r\n    <CodeSnippet code={codeSnippet1} />\r\n    a:\r\n    <input type=\"number\" bind:value={a} />\r\n    + b:\r\n    <input type=\"number\" bind:value={b} />\r\n    = c: {c}\r\n  </div>\r\n\r\n  <div>\r\n    <CodeSnippet code={codeSnippet2} />\r\n    <input type=\"text\" bind:value={name} />\r\n    <br />\r\n    {hello}\r\n  </div>\r\n</SlideContainer>\r\n\r\n<style>\r\n  h1 {\r\n    display: flex;\r\n    color: darkorange;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from 'svelte'\r\n  import { logMountAndDestroy } from '../utils.js'\r\n  import SlideContainer from './SlideContainer.svelte'\r\n\r\n  logMountAndDestroy('Slide 2')\r\n</script>\r\n\r\n<SlideContainer>\r\n  <h1>This is my second slide!</h1>\r\n</SlideContainer>\r\n\r\n<style>\r\n  h1 {\r\n    background-color: yellow;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from 'svelte'\r\n  import { logMountAndDestroy } from '../utils.js'\r\n  import SlideContainer from './SlideContainer.svelte'\r\n\r\n  logMountAndDestroy('Slide 3')\r\n</script>\r\n\r\n<SlideContainer>\r\n  <h1>This is my third slide!</h1>\r\n</SlideContainer>\r\n\r\n<style>\r\n  h1 {\r\n    background-color: green;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { fly, fade } from 'svelte/transition'\r\n  import { slideTransition } from '../navigationStores'\r\n\r\n  const defaultFlyInX = 1000\r\n  const defaultFlyInY = 0\r\n  const jumpFlyInX = 0\r\n  const jumpFlyInY = 1000\r\n  const duration = 300\r\n\r\n  function calculateFlyInValues(transition) {\r\n    if (transition === 'next') return [+defaultFlyInX, defaultFlyInY]\r\n    else if (transition === 'previous') return [-defaultFlyInX, defaultFlyInY]\r\n    else if (transition === 'jump') return [jumpFlyInX, jumpFlyInY]\r\n  }\r\n\r\n  let [flyX, flyY] = calculateFlyInValues($slideTransition)\r\n\r\n  $: {\r\n    // console.log(`flyX = ${flyX} | flyY = ${flyY} | trans = ${$slideTransition}`)\r\n  }\r\n</script>\r\n\r\n<div\r\n  class=\"slide\"\r\n  in:fly={{ x: flyX, y: flyY, delay: duration, duration: duration }}\r\n  out:fly={{ duration: duration }}>\r\n  <slot>Slide Container</slot>\r\n</div>\r\n\r\n<style>\r\n  .slide {\r\n    margin: 5px;\r\n    flex: 1 0 auto;\r\n    align-self: stretch;\r\n    text-align: center;\r\n    background-color: white;\r\n    padding: 2px;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}